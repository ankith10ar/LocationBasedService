plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com.maps'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
	targetCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.4'
	implementation 'org.hibernate:hibernate-spatial:6.2.7.Final'
	implementation 'org.locationtech.jts:jts-core:1.19.0'
	implementation 'com.graphhopper.external:jackson-datatype-jts:2.14'

	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'

	testCompileOnly 'org.projectlombok:lombok:1.18.22'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

	runtimeOnly 'org.postgresql:postgresql:42.5.4'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

task buildFrontend(type: Exec) {
	workingDir = file('frontend') // Path to your ReactJS frontend directory
	doLast {
		println "Working directory: $workingDir"
	}
	commandLine 'cmd', '/c', 'npm', 'install' // Ensure npm dependencies are installed
	commandLine 'cmd', '/c', 'npm', 'run', 'build' // Use the command to build your ReactJS app
}

task moveFrontendResources(type: Copy, dependsOn: buildFrontend) {
	doLast {
		println "Executing moveFrontendResources task"
	}
	from 'frontend/build' // Path to the built ReactJS resources
	into 'src/main/resources/static' // Target directory in the backend resources
}

processResources.dependsOn(moveFrontendResources)
